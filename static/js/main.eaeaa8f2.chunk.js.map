{"version":3,"sources":["forms/formValidations.js","config.js","custom-hooks/useForm.js","components/Table.js","constants.js","components/AppointmentForm.js","components/BillingComponent.js","components/ViewAppointments.js","App.js","reportWebVitals.js","index.js"],"names":["validate","values","errors","patientName","dob","age","appointmentDate","Date","phoneNo","addressLine1","addressLine2","city","state","pincode","country","paymentFormValidation","paymentAmount","paymentMethod","cardHolderName","cardNumber","expiryDate","cvvNo","API_ENDPOINT","useForm","callback","useState","setValues","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","handleChange","event","persist","target","name","value","handleSubmit","preventDefault","setFieldValues","fieldName","fieldValue","Table","columns","rows","component","deleteRow","map","column","index","colSpan","item","scanAmount","discount","totalAmount","onClick","className","gender","balanceAmount","billingID","paymentDate","scanList","maxDiscount","slots","billingStatus","userAge","ScanList","setScanItem","searchText","setSearchText","displayScanList","setDisplayScanList","selectedScanItem","setSelectedScanItem","setDiscount","type","onChange","toLowerCase","list","filter","x","toLocaleLowerCase","includes","option","find","scanItemClicked","id","min","alert","scanItem","document","getElementById","AppointmentForm","setShowAppointmentForm","setAge","selectedScans","setSelectedScans","setGender","ageRepresentation","setAgeRepresentation","a","requestOptions","method","headers","body","JSON","stringify","patientDetails","formUserDetails","billingDetails","formBillingDetails","fetch","response","json","message","error","total","reduce","scanNames","join","amountPaid","noOfTransactions","status","Number","today","maxDate","getFullYear","getMonth","getDate","calculateAgeYears","dateString","birthDate","m","calculateAgeMonths","months","targetDate","onSubmit","salutationValue","checked","htmlFor","max","readOnly","placeholder","defaultValue","disabled","selectedItem","findIndex","push","splice","BillingComponent","billingId","toggleBillingView","setBillingDetails","billTransactions","setBillTransactions","setPaymentMethod","fetchBillingDetails","transactions","transaction","toLocaleDateString","patientID","ViewAppointments","showAppointmentForm","searchParam","appointments","setAppointments","showBilling","setShowBilling","setBillingId","billingFilter","setBillingFilter","fetchAppointments","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.eaeaa8f2.chunk.js","sourcesContent":["const validate = (values) => {\n    let errors = {};\n\n    if (!values.patientName) {\n        errors.patientName = \"Patient Name is required\";\n    }\n\n    if (!values.dob) {\n        errors.dob = \"Please select date of birth\";\n    }\n\n    if (!values.age) {\n        if (values.age === 0 || values.age === -1) {\n            errors.age = \"At least patient should be 3 months old\";\n        }\n    } else if (values.age === 0) {\n        errors.age = \"At least patient should be 3 months old\";\n    }\n\n    if (!values.appointmentDate) {\n        errors.appointmentDate = \"Please select appointment date\";\n    } else {\n        if (errors.appointmentDate < new Date()) {\n            errors.appointmentDate = \"Appointment date should not be past date\";\n        }\n    }\n\n    if (!values.phoneNo) {\n        errors.phoneNo = \"Phone number is required\";\n    }\n\n    if (!values.addressLine1) {\n        errors.addressLine1 = \"Address line1 is required\";\n    }\n\n    if (!values.addressLine2) {\n        errors.addressLine2 = \"Address line2 is required\";\n    }\n\n    if (!values.city) {\n        errors.city = \"City is required\";\n    }\n\n    if (!values.state) {\n        errors.state = \"State is required\";\n    }\n\n    if (!values.pincode) {\n        errors.pincode = \"Pincode is required\";\n    }\n\n    if (!values.country) {\n        errors.country = \"Country is required\";\n    }\n\n    return errors;\n};\n\nconst paymentFormValidation = (values) => {\n    let errors = {};\n\n    if (!values.paymentAmount) {\n        errors.paymentAmount = \"Payment amount is required\";\n    }\n\n    if (!values.paymentMethod) {\n        errors.paymentMethod = \"Please select a payment method\";\n    }\n\n    if (values.paymentMethod === \"CARD\") {\n        if (!values.cardHolderName) {\n            errors.cardHolderName = \"Pleas enter card holder name\";\n        }\n\n        if (!values.cardNumber) {\n            errors.cardNumber = \"Card number is required\";\n        }\n\n        if (!values.expiryDate) {\n            errors.expiryDate = \"Expiry date is required\";\n        }\n\n        if (!values.cvvNo) {\n            errors.cvvNo = \"CVV number is required\";\n        }\n    }\n\n    return errors;\n};\n\nexport { validate, paymentFormValidation };\n","export const API_ENDPOINT = \"https://thawing-beyond-42205.herokuapp.com/\";\n","import { useState, useEffect } from \"react\";\n\n//Custom hook to handle forms and field values\nconst useForm = (callback, validate) => {\n    const [values, setValues] = useState({});\n    const [errors, setErrors] = useState({});\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    useEffect(() => {\n        if (Object.keys(errors).length === 0 && isSubmitting) {\n            callback();\n        }\n    }, [errors]);\n\n    useEffect(() => {\n        if (Object.keys(errors).length) {\n            setErrors(validate(values));\n        }\n    }, [values]);\n\n    const setFieldValues = (fieldName, fieldValue) => {\n        setValues((values) => ({ ...values, [fieldName]: fieldValue }));\n    };\n\n    const handleSubmit = (event) => {\n        if (event) event.preventDefault();\n        setErrors(validate(values));\n        setIsSubmitting(true);\n    };\n\n    const handleChange = (event) => {\n        event.persist();\n        setIsSubmitting(false);\n        setValues((values) => ({\n            ...values,\n            [event.target.name]: event.target.value\n        }));\n    };\n\n    return {\n        handleChange,\n        handleSubmit,\n        values,\n        setFieldValues,\n        errors\n    };\n};\n\nexport default useForm;\n","import React,{} from 'react';\n\n\nconst Table = ({columns, rows, component, callback, deleteRow}) => {\n\n\n    const renderScanDetails = () => {\n        return rows.map((item,index)=>{\n                return (\n            <tr key={`${index}-${item.name}`}>\n                <td>{index+1}</td>\n                <td>{item.name}</td>\n                <td>{item.scanAmount}</td>\n                <td>{item.discount}</td>\n                <td>{item.totalAmount}</td>\n                <td onClick={()=>deleteRow(index)} className=\"pointer\">Delete</td>\n            </tr>\n                )\n            })\n    }\n\n\n    const renderAppointmentDetails = () => {\n        return(\n            rows.map((item,index)=>{\n                return (\n            <tr key={`${index}-${item.name}`}>\n                <td>{index+1}</td>\n                <td>{item.patientName}</td>\n                <td>{`${item.age}-${item.gender}`}</td>\n                <td>{item.appointmentDate}</td>\n                <td>{item.balanceAmount}</td>\n                <td className=\"cursor\" onClick={()=>callback(item.billingID)}>Click to Pay</td>\n            </tr>\n                )\n            })\n          \n        )\n    }\n\n    const renderBillingDetails = () => {\n        return rows.map((item,index)=>{\n                return (\n            <tr key={`${index}-${item.name}`}>\n                <td>{index+1}</td>\n                <td>{item.paymentDate}</td>\n                <td>{item.paymentAmount}</td>\n                <td>{item.paymentMethod}</td>\n            </tr>\n                )\n            })   \n    }\n\n\n    const renderTableTows = ()=>{\n        if(component === \"scan\"){\n            return renderScanDetails();\n        }else if(component === \"appointments\"){\n            return renderAppointmentDetails();\n        }else{\n            return renderBillingDetails();\n        }\n    }\n\n  return(\n    <table>\n      <thead>  \n        <tr>            \n        <th>Sno</th>\n        {\n            columns.map((column,index)=>(\n               <th key={`${index}-${column}`}>{column}</th>\n            ))\n        } \n      </tr></thead>\n      <tbody>\n        {\n          rows.length === 0 ? <tr><td colSpan={columns.length+1}>No Data Found</td></tr> : renderTableTows()           \n        }\n      </tbody>     \n    </table>\n  )\n}\n\n\nexport default Table;","const scanList = [\n    {\n        name: \"CT BRAIN\",\n        value: \"CT\",\n        maxDiscount: 100,\n        scanAmount: 500,\n        slots: 7\n    },\n    {\n        name: \"MRI BRAIN\",\n        value: \"MRI\",\n        maxDiscount: 300,\n        scanAmount: 800,\n        slots: 6\n    },\n    {\n        name: \"GLUCOSE FASTING\",\n        value: \"LAB\",\n        maxDiscount: 10,\n        scanAmount: 100,\n        slots: \"na\"\n    }\n];\n\nconst billingStatus = {\n    notBilled: \"notBilled\",\n    dueBilled: \"dueBilled\",\n    fullyBilled: \"fullyBilled\"\n};\n\nconst userAge = { months: \"months\", years: \"years\" };\n\nconst genderConst = [\n    { name: \"Male\", value: \"male\", salutationValue: \"mr\" },\n    { name: \"Female\", value: \"female\", salutationValue: \"ms,mrs\" }\n];\n\nexport { scanList, billingStatus, userAge, genderConst };\n","import React, { useState } from \"react\";\nimport { validate } from \"../forms/formValidations\";\nimport { API_ENDPOINT } from \"../config\";\nimport useForm from \"../custom-hooks/useForm\";\nimport Table from \"./Table\";\nimport { scanList, userAge, billingStatus } from \"../constants\";\nimport \"./Styles.scss\";\n\nfunction AppointmentForm({ setShowAppointmentForm }) {\n    const [age, setAge] = useState(\"\");\n    const [selectedScans, setSelectedScans] = useState([]);\n    const [gender, setGender] = useState(\"Male\");\n    const [ageRepresentation, setAgeRepresentation] = useState(userAge.years);\n\n    const addAppointment = async () => {\n        try {\n            const requestOptions = {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    patientDetails: formUserDetails(),\n                    billingDetails: formBillingDetails()\n                })\n            };\n            const response = await fetch(\n                `${API_ENDPOINT}createappointment`,\n                requestOptions\n            );\n            const message = await response.json();\n            if (message.error) {\n                alert(message.error);\n            } else {\n                setShowAppointmentForm(false);\n                alert(\"Appointment created successfully\");\n            }\n        } catch (error) {\n            alert(\"Something went wrong\");\n        }\n    };\n\n    const {\n        values,\n        errors,\n        handleChange,\n        setFieldValues,\n        handleSubmit\n    } = useForm(addAppointment, validate);\n\n    const formUserDetails = () => {\n        return {\n            patientName: values.patientName,\n            gender: gender,\n            age: `${age} ${ageRepresentation === \"years\" ? \"Years\" : \"Months\"}`,\n            dob: values.dob,\n            phoneNo: values.phoneNo,\n            addressLine1: values.addressLine1,\n            addressLine2: values.addressLine2,\n            city: values.city,\n            state: values.state,\n            pincode: values.pincode,\n            country: values.country\n        };\n    };\n\n    const formBillingDetails = () => {\n        const total = selectedScans.reduce(\n            (totalAmount, scanAmount) =>\n                totalAmount + (scanAmount[\"totalAmount\"] || 0),\n            0\n        );\n        return {\n            patientName: values.patientName,\n            gender: gender,\n            age: `${age} ${ageRepresentation === \"years\" ? \"Years\" : \"Months\"}`,\n            appointmentDate: values.appointmentDate,\n            scanNames: selectedScans.map((x) => x.value).join(\",\"),\n            amountPaid: 0,\n            noOfTransactions: 0,\n            status: billingStatus.notBilled,\n            balanceAmount: total,\n            totalAmount: total,\n            discount: selectedScans.reduce(\n                (totalAmount, scanAmount) =>\n                    totalAmount + (Number(scanAmount[\"discount\"]) || 0),\n                0\n            )\n        };\n    };\n\n    const today = new Date();\n    const maxDate = `${today.getFullYear()}-${\n        today.getMonth() + 1\n    }-${today.getDate()}`;\n\n    const onSalutationChange = (event) => {\n        const salutationValue = event.target.value;\n        if (salutationValue === \"mr\") {\n            setGender(\"Male\");\n        } else {\n            setGender(\"Female\");\n        }\n    };\n\n    const onDOBChange = (event) => {\n        if (ageRepresentation === userAge.years) {\n            calculateAgeYears(event.target.value);\n        } else {\n            calculateAgeMonths(event.target.value);\n        }\n        handleChange(event);\n    };\n\n    const ageRepresentChange = (event) => {\n        setAgeRepresentation(event.target.value);\n    };\n\n    const calculateAgeYears = (dateString) => {\n        let today = new Date();\n        let birthDate = new Date(dateString);\n        let age = today.getFullYear() - birthDate.getFullYear();\n        let m = today.getMonth() - birthDate.getMonth();\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n            age--;\n        }\n        if (age <= 0) {\n            setAgeRepresentation(userAge.months);\n            calculateAgeMonths(dateString);\n        } else {\n            setFieldValues(\"age\", age);\n            setAge(age);\n        }\n    };\n\n    const deleteAddedScan = (index) => {\n        const selectedItem = [...selectedScans];\n        selectedItem.splice(index, 1);\n        setSelectedScans(selectedItem);\n    };\n\n    const setScanItem = (values) => {\n        const selectedItem = [...selectedScans];\n        const index = selectedItem.findIndex((x) => x.name === values.name);\n        if (index !== -1) {\n            alert(\"This scan item is already added in the list\");\n            return;\n        }\n        selectedItem.push(values);\n        setSelectedScans(selectedItem);\n    };\n\n    function calculateAgeMonths(dateString) {\n        let targetDate = new Date(dateString);\n        let months;\n        let today = new Date();\n        months = (today.getFullYear() - targetDate.getFullYear()) * 12;\n        months -= targetDate.getMonth();\n        months += today.getMonth();\n        months = months <= 0 ? 0 : months;\n        if (months > 12) {\n            setAgeRepresentation(userAge.years);\n            calculateAgeYears(dateString);\n        } else {\n            setFieldValues(\"age\", months);\n            setAge(months);\n        }\n    }\n\n    return (\n        <div className=\"appointment-form\">\n            <p className=\"title\">Patient Details</p>\n            <hr></hr>\n            <form onSubmit={handleSubmit}>\n                <div className=\"flex-display row\">\n                    <div className=\"flex-display column-1\">\n                        <label className=\"form-label\">Patient Name</label>\n                        <div>\n                            <div className=\"flex-display\">\n                                <select onChange={onSalutationChange}>\n                                    <option value=\"mr\">Mr</option>\n                                    <option value=\"mrs\">Mrs</option>\n                                    <option value=\"ms\">Ms</option>\n                                </select>\n                                <input\n                                    name=\"patientName\"\n                                    onChange={handleChange}\n                                    className={`ml-10 form-control ${\n                                        errors.patientName\n                                            ? \"error-field\"\n                                            : null\n                                    }`}\n                                />\n                            </div>\n                            {errors.patientName && (\n                                <p className=\"error-msg\">\n                                    {errors.patientName}\n                                </p>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"flex-display ml-30\">\n                        <label className=\"form-label\">Gender</label>\n                        <div>\n                            <input\n                                checked={gender === \"Male\"}\n                                onChange={() => {}}\n                                type=\"radio\"\n                                id=\"male\"\n                                name=\"gender\"\n                                value=\"Male\"\n                            />\n                            <label htmlFor=\"male\">Male</label>\n                            <input\n                                checked={gender === \"Female\"}\n                                onChange={() => {}}\n                                type=\"radio\"\n                                id=\"female\"\n                                name=\"gender\"\n                                value=\"Female\"\n                            />\n                            <label htmlFor=\"female\">Female</label>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex-display row\">\n                    <div className=\"column-1 flex-display\">\n                        <label className=\"form-label\">DOB</label>\n                        <div>\n                            <input\n                                max={maxDate}\n                                onChange={onDOBChange}\n                                type=\"date\"\n                                className={`form-control ${\n                                    errors.dob ? \"error-field\" : null\n                                }`}\n                                name=\"dob\"\n                            />\n                            {errors.dob && (\n                                <p className=\"error-msg\">{errors.dob}</p>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"flex-display ml-30\">\n                        <label className=\"form-label\">Age</label>\n                        <div>\n                            <div>\n                                <input\n                                    value={age}\n                                    readOnly\n                                    className=\"form-control age-input\"\n                                    name=\"age\"\n                                    type=\"number\"\n                                />\n                                <select\n                                    className=\"ml-10\"\n                                    value={ageRepresentation}\n                                    onChange={ageRepresentChange}\n                                >\n                                    <option value=\"years\">Years</option>\n                                    <option value=\"months\">Months</option>\n                                </select>\n                            </div>\n                            {errors.age && (\n                                <p className=\"error-msg\">{errors.age}</p>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex-display row\">\n                    <div className=\"flex-display column-1\">\n                        <label className=\"form-label\">Appointment Date</label>\n                        <div>\n                            <input\n                                min={maxDate}\n                                onChange={handleChange}\n                                type=\"date\"\n                                className=\"form-control\"\n                                name=\"appointmentDate\"\n                            />\n                            {errors.appointmentDate && (\n                                <p className=\"error-msg\">\n                                    {errors.appointmentDate}\n                                </p>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"flex-display ml-30\">\n                        <label className=\"form-label\">Phone No</label>\n                        <div>\n                            <input\n                                onChange={handleChange}\n                                name=\"phoneNo\"\n                                className=\"form-control\"\n                                type=\"number\"\n                            />\n                            {errors.phoneNo && (\n                                <p className=\"error-msg\">{errors.phoneNo}</p>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"flex-display row\">\n                    <div className=\"flex-display\">\n                        <label className=\"form-label\">Address</label>\n                    </div>\n                    <div className=\"address-fields\">\n                        <input\n                            name=\"addressLine1\"\n                            onChange={handleChange}\n                            placeholder=\"Address line 1\"\n                            className=\"form-control w-100\"\n                            type=\"text\"\n                        />\n                        {errors.addressLine1 && (\n                            <p className=\"error-msg\">{errors.addressLine1}</p>\n                        )}\n                        <input\n                            name=\"addressLine2\"\n                            onChange={handleChange}\n                            placeholder=\"Address line 2\"\n                            className=\"form-control w-100 mt-20\"\n                            type=\"text\"\n                        />\n                        {errors.addressLine2 && (\n                            <p className=\"error-msg\">{errors.addressLine2}</p>\n                        )}\n                        <div className=\"flex-display space-between mt-20\">\n                            <div className=\"fixed-sm\">\n                                <input\n                                    name=\"city\"\n                                    onChange={handleChange}\n                                    placeholder=\"City\"\n                                    className=\"form-control w-100\"\n                                    type=\"text\"\n                                />\n                                {errors.city && (\n                                    <p className=\"error-msg\">{errors.city}</p>\n                                )}\n                            </div>\n                            <div className=\"fixed-sm\">\n                                <input\n                                    name=\"state\"\n                                    onChange={handleChange}\n                                    placeholder=\"State\"\n                                    className=\"form-control w-100\"\n                                    type=\"text\"\n                                />\n                                {errors.state && (\n                                    <p className=\"error-msg ml-10\">\n                                        {errors.state}\n                                    </p>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"flex-display mt-20 space-between\">\n                            <div className=\"fixed-sm\">\n                                <input\n                                    placeholder=\"Pincode/Zipcode\"\n                                    name=\"pincode\"\n                                    onChange={handleChange}\n                                    className=\"form-control w-100\"\n                                    type=\"number\"\n                                />\n                                {errors.pincode && (\n                                    <p className=\"error-msg\">\n                                        {errors.pincode}\n                                    </p>\n                                )}\n                            </div>\n                            <div className=\"fixed-sm\">\n                                <select\n                                    name=\"country\"\n                                    defaultValue=\"select\"\n                                    className=\"w-100\"\n                                    placeholder=\"please select a country\"\n                                    onChange={handleChange}\n                                >\n                                    <option disabled value=\"select\">\n                                        Please select a country\n                                    </option>\n                                    <option value=\"india\">India</option>\n                                    <option value=\"usa\">USA</option>\n                                    <option value=\"England\">England</option>\n                                </select>\n                                {errors.country && (\n                                    <p className=\"error-msg ml-10\">\n                                        {errors.country}\n                                    </p>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <p className=\"title\">Medical Scan Details</p>\n                <hr></hr>\n                <div className=\"flex-display\">\n                    <ScanList setScanItem={setScanItem} />\n                </div>\n                <Table\n                    columns={[\n                        \"Scan Name\",\n                        \"Scan Amount\",\n                        \"Discount\",\n                        \"Total Amount\",\n                        \"\"\n                    ]}\n                    component=\"scan\"\n                    rows={selectedScans}\n                    deleteRow={deleteAddedScan}\n                />\n                <button\n                    type=\"submit\"\n                    className={`secondary-btn mt-10 save-btn ${\n                        selectedScans.length > 0 ? \"\" : \"disable-btn\"\n                    }`}\n                >\n                    Save\n                </button>\n            </form>\n        </div>\n    );\n}\n\n//Component to add scan items and props in UI\nconst ScanList = ({ setScanItem }) => {\n    const [searchText, setSearchText] = useState(\"\");\n    const [displayScanList, setDisplayScanList] = useState([]);\n    const [selectedScanItem, setSelectedScanItem] = useState(null);\n    const [discount, setDiscount] = useState(null);\n\n    const onScanSearchChange = (event) => {\n        const searchText = event.target.value.toLowerCase();\n        const list = scanList.filter((x) =>\n            x.name.toLocaleLowerCase().includes(searchText)\n        );\n        setDisplayScanList(list);\n        setSearchText(searchText);\n    };\n\n    const scanItemClicked = (value) => {\n        const option = scanList.find((x) => x.value === value);\n        setSelectedScanItem(option);\n        setDisplayScanList([]);\n        setSearchText(option.name);\n    };\n\n    const addClickHandler = (event) => {\n        if (discount < 0) {\n            alert(\"Invalid Discount amount\");\n            return;\n        }\n        if (selectedScanItem?.maxDiscount < discount) {\n            alert(\n                `Max discount can be availed is ${selectedScanItem.maxDiscount}`\n            );\n            return;\n        }\n        const scanItem = { ...selectedScanItem };\n        scanItem.discount = discount === null ? 0 : discount;\n        scanItem.totalAmount = scanItem.scanAmount - discount;\n        setSelectedScanItem(null);\n        setScanItem(scanItem);\n        document.getElementById(\"discount\").value = \"\";\n        document.getElementById(\"scanAmount\").value = \"\";\n        setSearchText(\"\");\n        event.preventDefault();\n    };\n\n    return (\n        <div className=\"ml-10 flex-display\">\n            <label className=\"mt-10\">Scan List</label>\n            <div className=\"scan-list\">\n                <input\n                    className=\"ml-10 form-control\"\n                    type=\"text\"\n                    value={searchText}\n                    onChange={onScanSearchChange}\n                />\n                {displayScanList.length > 0 && (\n                    <div className=\"scan-options\">\n                        {displayScanList.map((option) => (\n                            <p\n                                key={option.value}\n                                className=\"scan-option\"\n                                onClick={() => scanItemClicked(option.value)}\n                            >\n                                {option.name}\n                            </p>\n                        ))}\n                    </div>\n                )}\n            </div>\n            <label className=\"ml-10 mt-10\">Scan Amount</label>\n            <label className=\"ml-10  mt-10  scan-amount\" id=\"scanAmount\">\n                {selectedScanItem?.scanAmount ?? null}\n            </label>\n            <label className=\"ml-10 mt-10\">Discount</label>\n            <input\n                className=\"ml-10 form-control\"\n                min=\"0\"\n                type=\"number\"\n                id=\"discount\"\n                onChange={(event) => {\n                    setDiscount(event.target.value);\n                }}\n            />\n            <button\n                onClick={addClickHandler}\n                className={`secondary-btn ${\n                    selectedScanItem ? \"\" : \"disable-btn\"\n                }`}\n            >\n                Add\n            </button>\n        </div>\n    );\n};\n\nexport default AppointmentForm;\n","import React, { useState, useEffect } from \"react\";\nimport useForm from \"../custom-hooks/useForm\";\nimport { API_ENDPOINT } from \"../config\";\nimport { paymentFormValidation } from \"../forms/formValidations\";\nimport Table from \"./Table\";\n\nconst BillingComponent = ({ billingId, toggleBillingView }) => {\n    const [billingDetails, setBillingDetails] = useState(null);\n    const [billTransactions, setBillTransactions] = useState([]);\n    const [paymentMethod, setPaymentMethod] = useState(\"Card\");\n\n    useEffect(() => {\n        fetchBillingDetails();\n    }, []);\n\n    const fetchBillingDetails = async () => {\n        try {\n            const response = await fetch(\n                `${API_ENDPOINT}billingdetails?billingId=${billingId}`\n            );\n            const billingDetails = await response.json();\n            setBillingDetails(billingDetails);\n            setBillTransactions(billingDetails.transactions);\n        } catch (error) {\n            alert(\"Something went wrong\");\n        }\n    };\n\n    const saveTransaction = async () => {\n        try {\n            if (\n                billingDetails.transactions.length === 2 &&\n                values.paymentAmount < billingDetails.balanceAmount\n            ) {\n                alert(\n                    \"Kindly make full payment as two transactions are already over\"\n                );\n                return;\n            } else if (\n                values.paymentAmount <\n                (billingDetails.totalAmount / 100) * 20\n            ) {\n                alert(\"You should pay at least 20% of the total amount\");\n            } else {\n                const transaction = {\n                    billingID: billingId,\n                    paymentDate: new Date().toLocaleDateString(),\n                    paymentAmount: values.paymentAmount,\n                    paymentMethod: paymentMethod\n                };\n                const requestOptions = {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ transaction: transaction })\n                };\n                const response = await fetch(\n                    `${API_ENDPOINT}transaction`,\n                    requestOptions\n                );\n                fetchBillingDetails();\n                toggleBillingView(false);\n                alert(\"Transaction successfully\");\n            }\n        } catch (error) {\n            alert(\"Something went wrong\");\n        }\n    };\n\n    const {\n        values,\n        errors,\n        setFieldValues,\n        handleChange,\n        handleSubmit\n    } = useForm(saveTransaction, paymentFormValidation);\n\n    const toggleView = () => {\n        toggleBillingView(false);\n    };\n\n    const paymentMethodChange = (event) => {\n        setPaymentMethod(event.target.value);\n        setFieldValues(event.target.name, event.target.value);\n    };\n\n    return (\n        <div className=\"billing-component\">\n            <div className=\"billing-container\">\n                <div className=\"flex-display space-between\">\n                    <p className=\"title\">Patient Billing</p>\n                    <p onClick={toggleView} className=\"title pointer\">\n                        Back to Appointments\n                    </p>\n                </div>\n                <hr></hr>\n                {billingDetails && (\n                    <div className=\"flex-display space-between\">\n                        <div className=\"flex-1\">\n                            <p>Current Billing Status</p>\n                            <table>\n                                <tbody>\n                                    <tr>\n                                        <td>Patient Name</td>\n                                        <td>{billingDetails.patientName}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>PatientID</td>\n                                        <td>{billingDetails.patientID}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Age/Gender</td>\n                                        <td>{`${billingDetails.gender}/${billingDetails.age}`}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Total Amount</td>\n                                        <td>{`${billingDetails.totalAmount} INR`}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Discount</td>\n                                        <td>{`${billingDetails.discount} INR`}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Paid Amount</td>\n                                        <td>{`${billingDetails.amountPaid} INR`}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Status</td>\n                                        <td>{`${billingDetails.status}`}</td>\n                                    </tr>\n                                    <tr>\n                                        <td>Balance</td>\n                                        <td>{`${billingDetails.balanceAmount} INR`}</td>\n                                    </tr>\n                                </tbody>\n                            </table>\n                            {billingDetails.status === \"fullyPaid\" ? (\n                                <p className=\"mt-10\">You don't have any due</p>\n                            ) : (\n                                <div className=\"billing-info\">\n                                    <form onSubmit={handleSubmit}>\n                                        <div className=\"flex-display mt-20 w-100\">\n                                            <label>Payable Amount: </label>\n                                            <div>\n                                                <input\n                                                    onChange={handleChange}\n                                                    name=\"paymentAmount\"\n                                                    type=\"number\"\n                                                />\n                                                {errors.paymentAmount && (\n                                                    <p className=\"error-msg\">\n                                                        {errors.paymentAmount}\n                                                    </p>\n                                                )}\n                                            </div>\n                                        </div>\n                                        <div className=\"flex-display mt-20\">\n                                            <label>Payment Mode : </label>\n                                            <div>\n                                                <select\n                                                    name=\"paymentMethod\"\n                                                    onChange={\n                                                        paymentMethodChange\n                                                    }\n                                                    className=\"ml-10\"\n                                                >\n                                                    <option value=\"select\">\n                                                        Please Select\n                                                    </option>\n                                                    <option value=\"CARD\">\n                                                        Card\n                                                    </option>\n                                                    <option value=\"CASH\">\n                                                        Cash\n                                                    </option>\n                                                </select>\n                                                {errors.paymentMethod && (\n                                                    <p className=\"error-msg\">\n                                                        {errors.paymentMethod}\n                                                    </p>\n                                                )}\n                                            </div>\n                                        </div>\n\n                                        <input\n                                            onChange={handleChange}\n                                            placeholder=\"Card Holder's Name\"\n                                            name=\"cardHolderName\"\n                                            className=\"w-100 mt-20\"\n                                            type=\"text\"\n                                        />\n                                        {errors.cardHolderName && (\n                                            <p className=\"error-msg\">\n                                                {errors.cardHolderName}\n                                            </p>\n                                        )}\n                                        <input\n                                            onChange={handleChange}\n                                            placeholder=\"Card Number\"\n                                            name=\"cardNumber\"\n                                            className=\"w-100 mt-20\"\n                                            type=\"number\"\n                                        />\n                                        {errors.cardNumber && (\n                                            <p className=\"error-msg\">\n                                                {errors.cardNumber}\n                                            </p>\n                                        )}\n                                        <div className=\"mt-20\">\n                                            <label>Expiry</label>\n                                            <div className=\"flex-display\">\n                                                <div>\n                                                    <input\n                                                        name=\"expiryDate\"\n                                                        onChange={handleChange}\n                                                        className=\"expiry-date\"\n                                                        type=\"date\"\n                                                    />\n                                                    {errors.expiryDate && (\n                                                        <p className=\"error-msg\">\n                                                            {errors.expiryDate}\n                                                        </p>\n                                                    )}\n                                                </div>\n                                                <div>\n                                                    <input\n                                                        onChange={handleChange}\n                                                        name=\"cvvNo\"\n                                                        className=\"cvv-no\"\n                                                        type=\"number\"\n                                                    />\n                                                    {errors.cvvNo && (\n                                                        <p className=\"error-msg\">\n                                                            {errors.cvvNo}\n                                                        </p>\n                                                    )}\n                                                </div>\n                                                <p className=\"ml-20\">\n                                                    <b>128 bit secured</b>\n                                                </p>\n                                            </div>\n                                        </div>\n\n                                        <button\n                                            type=\"submit\"\n                                            className=\"secondary-btn mt-20\"\n                                        >\n                                            SAVE\n                                        </button>\n                                    </form>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"ml-20 flex-1\">\n                            <p>Previous Transactions:</p>\n                            <Table\n                                columns={[\n                                    \"Date\",\n                                    \"Paid Amount\",\n                                    \"Payment Mode\"\n                                ]}\n                                component=\"transactions\"\n                                rows={billTransactions}\n                            />\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BillingComponent;\n","import React, { useEffect, useState } from \"react\";\nimport Table from \"./Table\";\nimport { API_ENDPOINT } from \"../config\";\nimport BillingComponent from \"./BillingComponent\";\nimport \"./Styles.scss\";\n\nfunction ViewAppointments({ showAppointmentForm }) {\n    const searchParam = {\n        billingStatus: \"notBilled\"\n    };\n\n    const [appointments, setAppointments] = useState([]);\n    const [showBilling, setShowBilling] = useState(false);\n    const [billingId, setBillingId] = useState(null);\n    const [billingFilter, setBillingFilter] = useState(\"notBilled\");\n\n    useEffect(() => {\n        !showBilling && fetchAppointments();\n    }, [showAppointmentForm, showBilling]);\n\n    const fetchAppointments = async () => {\n        try {\n            searchParam.billingStatus = billingFilter;\n            const requestOptions = {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ searchParam: searchParam })\n            };\n            const response = await fetch(\n                `${API_ENDPOINT}appointments`,\n                requestOptions\n            );\n            const appointments = await response.json();\n            setAppointments(appointments);\n        } catch (error) {\n            alert(\"Something went wrong, Try again\");\n        }\n    };\n\n    const handleChange = (event) => {\n        searchParam[event.target.name] = event.target.value;\n        if (event.target.name === \"billingStatus\") {\n            setBillingFilter(event.target.value);\n        }\n    };\n\n    const showBillingPage = (billingId) => {\n        setBillingId(billingId);\n        setShowBilling(true);\n    };\n\n    const searchHandler = () => {\n        fetchAppointments();\n    };\n\n    const toggleBillingView = () => {\n        setShowBilling(false);\n    };\n\n    return (\n        <div>\n            {showBilling ? (\n                <BillingComponent\n                    billingId={billingId}\n                    toggleBillingView={toggleBillingView}\n                />\n            ) : (\n                <div className=\"view-appointments\">\n                    <p className=\"title\">View Appointments</p>\n                    <hr></hr>\n                    <div className=\"flex-display center-align space-evenly mb-20\">\n                        <div>\n                            <label>From Date</label>\n                            <input\n                                onChange={handleChange}\n                                type=\"date\"\n                                className=\"form-control ml-20\"\n                                name=\"fromDate\"\n                            />\n                        </div>\n                        <div>\n                            <label>To Date</label>\n                            <input\n                                onChange={handleChange}\n                                type=\"date\"\n                                className=\"form-control ml-20\"\n                                name=\"toDate\"\n                            />\n                        </div>\n                        <div>\n                            <label>Status</label>\n                            <select\n                                value={billingFilter}\n                                name=\"billingStatus\"\n                                onChange={handleChange}\n                                className=\"ml-20\"\n                            >\n                                <option value=\"notBilled\">\n                                    Not Yet Billed\n                                </option>\n                                <option value=\"dueBilled\">Due Billed</option>\n                                <option value=\"fullyPaid\">Fully-Paid</option>\n                            </select>\n                        </div>\n                        <div className=\"flex-display\">\n                            <label className=\"mt-10\">Common Search</label>\n                            <input\n                                name=\"searchText\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                className=\"form-control ml-20\"\n                            />\n                            <button\n                                onClick={searchHandler}\n                                className=\"secondary-btn mt-10 search-btn ml-20\"\n                            >\n                                Search\n                            </button>\n                        </div>\n                    </div>\n                    <Table\n                        columns={[\n                            \"Patient Name\",\n                            \"Age-Gender\",\n                            \"Appointment Date\",\n                            \"Balance Amount\",\n                            \"Action\"\n                        ]}\n                        component=\"appointments\"\n                        rows={appointments}\n                        callback={showBillingPage}\n                    />\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ViewAppointments;\n","import React, { useState } from \"react\";\nimport AppointmentForm from \"./components/AppointmentForm\";\nimport ViewAppointments from \"./components/ViewAppointments\";\nimport \"./App.scss\";\n\nfunction App() {\n    const [showAppointmentForm, setShowAppointmentForm] = useState(true);\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <button onClick={() => setShowAppointmentForm(true)}>\n                    Add New Appointment\n                </button>\n                <button onClick={() => setShowAppointmentForm(false)}>\n                    Check Appointments\n                </button>\n                {showAppointmentForm ? (\n                    <AppointmentForm\n                        setShowAppointmentForm={setShowAppointmentForm}\n                    />\n                ) : (\n                    <ViewAppointments\n                        showAppointmentForm={showAppointmentForm}\n                    />\n                )}\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}